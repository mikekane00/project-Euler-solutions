# -*- coding: utf-8 -*-
################################################################################################################################
#                       Project Euler Problem 44 Solution
#                               By Mike Kane
#
#Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are
#
#1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
#
#It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
#
#Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
#
################################################################################################################################
import time
pentNumList = []

def generatePentNumbers(number):
    return number * (number * 3 - 1) / 2
    
def getAnswer():
    start = time.time()
    difference = 0
    pentSum = 0
    for number in pentNumList:
        for number2 in pentNumList:
            difference = number2 - number
            pentSum = number + number2
            if difference in pentNumList:
                if pentSum in pentNumList:
                    print number, number2, (number2 - number)
    print "Total runtime: " + str(time.time() - start)

def populateList(length):
    counter = 1
    while len(pentNumList) < length:
        pentNumList.append(generatePentNumbers(counter))
        counter += 1
        
        
        

        

        